security:
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        Swagger:
            pattern: ^/api/doc
            anonymous: true

        register:
            pattern:  ^/api/user
            anonymous: true
            provider: app_user_provider
            methods: [POST]

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        forgotPassword:
            pattern: ^/api/password/forgot
            stateless: true
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc,  roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/api/user,  roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/password/forgot, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: [IS_AUTHENTICATED_FULLY,USER_VERIFIED] }
